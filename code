ll seg[2000000],ar[300002];
void build(int ind,int low,int high)
{
    if(low==high)
    {
        seg[ind]=ar[low];
        return;
    }
    int mid=(low+high)/2;
    build(2*ind,low,mid);
    build(2*ind+1,mid+1,high);
    seg[ind]=seg[ind*2]+seg[ind*2+1];
}
ll query(ll ind,ll low,ll high,ll l ,ll r)
{
    if(low>=l&&high<=r)
    {
        return seg[ind];
    }
    if(high<l||low>r)
    {
        return 0;
    }
    ll mid=(low+high)/2;
    ll left=query(ind*2,low,mid,l,r);
    ll right=query(ind*2+1,mid+1,high,l,r);
    return left+right;
}
void update(ll ind,ll low,ll high,ll node,ll val)
{
    if(low==high)
    {
        seg[ind]=val;
    }
    else
    {
        ll mid=(low+high)/2;
        if(low<=node&&mid>=node)
        {
            update(ind*2,low,mid,node,val);
        }
        else
        update(ind*2+1,mid+1,high,node,val);
        seg[ind]=seg[ind*2+seg[ind*2+1];
    }
}
